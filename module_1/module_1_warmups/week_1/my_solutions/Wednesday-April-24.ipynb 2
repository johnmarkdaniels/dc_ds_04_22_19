{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For loops and alternatives\n",
    "Given an array of integers, return the index of of the target number - try doing it with a for loop. Notice that the target number can repeat several times.\n",
    "\n",
    "Example:\n",
    "Given nums = [2, 9, 11, 15], target = 9,\n",
    "\n",
    "Because nums[1] = 9\n",
    "\n",
    "return [1].\n",
    "\n",
    "[optional I] - solve with for loops\n",
    "You have an array of integers, return indices of the two numbers such that they add to a target. Assume that each input would have exactly one solution, and you may not use the same element twice. Given nums = [2, 7, 11, 15], target = 9,\n",
    "\n",
    "Example\n",
    "Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1].\n",
    "\n",
    "[optional II] - solve the same with only one loop and a dictionary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Take in an array of integers and a target number."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Assumes array comes in as variable 'nums' and target as variable 'target'.   \n",
    "\n",
    "nums = [1, 2, 3, 1, 2, 7]\n",
    "target = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Return the index(location) of the target number."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your target may be found in \"nums\" at the following location(s): [0, 3].\n"
     ]
    }
   ],
   "source": [
    "target_locs = []\n",
    "index = range(len(nums))\n",
    "\n",
    "for i in index:\n",
    "    if nums[i] == target:\n",
    "        target_locs.append(i)\n",
    "        \n",
    "print(f'Your target may be found in \"nums\" at the following location(s): {target_locs}.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Option 1\n",
    "\n",
    "numsopt1 = [2, 7, 11, 15]\n",
    "targetopt1 = 9\n",
    "index = range(len(nums))\n",
    "secondindex = range(len(nums))\n",
    "targetlocsopt1 = []\n",
    "\n",
    "for i in index:\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
